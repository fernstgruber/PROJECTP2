library(RCurl)
library(rgrass7)
library(repmis)
require(xtable)
require(e1071)
myfunctions <- getURL("https://raw.githubusercontent.com/fernstgruber/Rstuff/master/fabiansandrossitersfunctions.R", ssl.verifypeer = FALSE)
eval(parse(text = myfunctions))
source_data("https://github.com/fernstgruber/PROJECTP2/raw/master/data2017/classesandparamsets.RData")
base="/home/fabs/Data/paper2data/RDATA/"
source_data("https://github.com/fernstgruber/p2/blob/master/data2017/geotopodata_twohundredpergeomorph_2017.RData?raw=true")
twohundred <- modeldata
source_data("https://github.com/fernstgruber/p2/blob/master/data2017/modeldata_onehundredpergeomorph.RData?raw=true")
onehundred <- modeldata
rm(modeldata)
geolegendeng <- read.table(text=getURL("https://raw.githubusercontent.com/fernstgruber/p2/master/data2017/geolegendeng.txt"),sep="\t",header=T)
names(geolegendeng) <- c("geounit_eng","Abbrev.","short.description","geomorphologie_beschreibung","code")
geolegendeng <- geolegendeng[,c(2,1,3,4,5)]
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_allterraincols_100pg"),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
base
paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_allterraincols_100pg")
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_allterraincols_100pg"),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_allterraincols_100pg")
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_allterraincols_100pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath="/media/fabs/Volume/01_PAPERZEUG/paper2_lenny_JUNE13/data_paper2/data2017/svm_fw_5fold_10p_geomorphologie_beschreibung_allterraincols_200pg",kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_allterraincols_200pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
importance_ranfor_pset(modeldata=onehundred,dependent="geomorphologie_beschreibung",pset=1,altdata=twohundred)
evaluateforwardCV_anyerror(mypath=paste(base,"ranfor_fw_5fold_10p_geomorphologie_beschreibung_allterraincols_100pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
predict_ranfor_newlegend_full(modeldata =onehundred,dependent="geomorphologie_beschreibung",predictors=c("Channel_Network_Base_Level","slope_DTM_50m_avg_ws7","Texture","ChannelNetworkBaseLevel", "Catchment_Area2","VerticalDistancetoChannelNetwork","Convexity"),pset=1,altdata=twohundred,legend=geolegendeng)
evaluateforwardCV_anyerror(mypath=paste(base,"ranfor_fw_5fold_10p_geomorphologie_beschreibung_allterraincols_200pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
predict_ranfor_newlegend_full(modeldata =twohundred,dependent="geomorphologie_beschreibung",predictors=c("Channel_Network_Base_Level","slope_DTM_50m_avg_ws7","Texture","ChannelNetworkBaseLevel", "Catchment_Area2","VerticalDistancetoChannelNetwork","Convexity"),pset=1,altdata=onehundred,legend=geolegendeng)
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_localterrain_100pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
predict_radial_newlegend_full(modeldata=twohundred, dependent="geomorphologie_beschreibung", predictors=c("slope_DTM_50m_avg_ws7","Convexity","profc_DTM_50m_avg_ws7","planc_DTM_50m_avg_ws7","maxic_DTM_50m_avg_ws5"),legend=geolegendeng)
predict_radial_newlegend_full(modeldata=twohundred, dependent="geomorphologie_beschreibung", predictors=c("slope_DTM_50m_avg_ws7","Convexity","profc_DTM_50m_avg_ws7","planc_DTM_50m_avg_ws7","maxic_DTM_50m_avg_ws5"),legend=geolegendeng,altdata=onehundred)
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_localterrain_200pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
predict_radial_newlegend_full(modeldata=onehundred, dependent="geomorphologie_beschreibung", predictors=c("slope_DTM_50m_avg_ws7","Convexity","Longitudinal_Curvature","slope_ws11","crosc_DTM_50m_avg_ws7"),legend=geolegendeng,altdata=twohundred)
importance_ranfor_pset(modeldata=onehundred,dependent="geomorphologie_beschreibung",pset=2,altdata=twohundred)
evaluateforwardCV_anyerror(mypath=paste(base,"ranfor_fw_5fold_10p_geomorphologie_beschreibung_localterrain_100pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
predict_ranfor_newlegend_full(modeldata =onehundred,dependent="geomorphologie_beschreibung",predictors=c("slope_DTM_50m_avg_ws7","profc_DTM_50m_avg_ws7","Convexity","Slope","Total_Curvature","crosc_DTM_50m_avg_ws7"),pset=1,altdata=twohundred,legend=geolegendeng)
evaluateforwardCV_anyerror(mypath=paste(base,"ranfor_fw_5fold_10p_geomorphologie_beschreibung_localterrain_200pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
View(predict_ranfor_newlegend_full)
myfunctions <- getURL("https://raw.githubusercontent.com/fernstgruber/Rstuff/master/fabiansandrossitersfunctions.R", ssl.verifypeer = FALSE)
predict_ranfor_newlegend_full(modeldata =onehundred,dependent="geomorphologie_beschreibung",predictors=c("slope_DTM_50m_avg_ws7","profc_DTM_50m_avg_ws7","Convexity","Slope","Total_Curvature","crosc_DTM_50m_avg_ws7"),altdata=twohundred,legend=geolegendeng)
predict_ranfor_newlegend_full(modeldata =twohundred,dependent="geomorphologie_beschreibung",predictors=c("slope_DTM_50m_avg_ws7","longc_DTM_50m_avg_ws7","Convexity","crosc_DTM_50m_avg_ws7","slope_ws11"),altdata=onehundred,legend=geolegendeng)
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_regionalterrain_100pg/",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_regionalterrain_200pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"ranfor_fw_5fold_10p_geomorphologie_beschreibung_regionalterrain_100pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_roughnesscols_200pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"ranfor_fw_5fold_10p_geomorphologie_beschreibung_roughnesscols_100pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"ranfor_fw_5fold_10p_geomorphologie_beschreibung_roughnesscols_200pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_rlicols_100pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_rlicols_200pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"ranfor_fw_5fold_10p_geomorphologie_beschreibung_rlicols_100pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"ranfor_fw_5fold_10p_geomorphologie_beschreibung_rlicols_200pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_heights_100pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_heights_200pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"ranfor_fw_5fold_10p_geomorphologie_beschreibung_heights_100pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"svm_fw_5fold_10p_geomorphologie_beschreibung_heights_200pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
evaluateforwardCV_anyerror(mypath=paste(base,"ranfor_fw_5fold_10p_geomorphologie_beschreibung_heights_200pg",sep=""),kk = 1:5,endround = 10,error = "cverror",geheim="geheimerprederror",yrange=c(0,1))
library(RCurl)
library(rgrass7)
library(repmis)
require(xtable)
myfunctions <- getURL("https://raw.githubusercontent.com/fernstgruber/Rstuff/master/fabiansandrossitersfunctions.R", ssl.verifypeer = FALSE)
eval(parse(text = myfunctions))
geogenesecode <-  read.table(text=getURL("https://raw.githubusercontent.com/fernstgruber/p2/master/data2017/geogenesecode_2017.csv"),header=T, sep="\t")
substratgenesecode <-  read.table(text=getURL("https://raw.githubusercontent.com/fernstgruber/p2/master/data2017/substratgenesecode_ohneleerzeichn_2017.csv"),header=T, sep=",")
boden <- read.table(text=getURL("https://raw.githubusercontent.com/fernstgruber/p2/master/data2017/Gebiet1_bodenprofile_ohnedoppelte_2017.csv"),header=T, sep="\t")
profilpunkte <- read.table(text=getURL("https://raw.githubusercontent.com/fernstgruber/p2/master/data2017/Profilpunkte_p2.csv"),header=T, sep=",")
geolegendeng <- read.table(text=getURL("https://raw.githubusercontent.com/fernstgruber/p2/master/data2017/geolegendeng.txt"),sep="\t",header=T)
thalheimer <- read.table(text=getURL("https://raw.githubusercontent.com/fernstgruber/p2/master/data2017/ueberetsch_profile_thalheimer_2017.csv"),sep="\t",header=T)
thalheimer_AGM <- thalheimer[c("Nr","AGM_thal","geomorphologie_kart_thalheimer")]
wlm_AGM <- read.table(text=getURL("https://raw.githubusercontent.com/fernstgruber/p2/master/data2017/wlm_AGM_2107.csv"),sep="\t",header=T)
rebo_AGM_geomorph <- read.table(text=getURL("https://raw.githubusercontent.com/fernstgruber/p2/master/data2017/rebo_AGM_geomorphologie.csv"),sep="\t",header=T)
rebo_AGM <- rebo_AGM_geomorph[,1:2]
names(rebo_AGM) <- c("ID","geomorphologie_kart_rebo")
forstdb_AGM <- read.table(text=getURL("https://raw.githubusercontent.com/fernstgruber/p2/master/data2017/forstdb_AGM.csv"),sep="\t",header=T)
geolegende <- read.table(text=getURL("https://raw.githubusercontent.com/fernstgruber/p2/master/data2017/wiedergeotest.csv"),sep=";",header=T,stringsAsFactors = F)
boden <- merge(x=boden,y=geolegende,by.x="gebiet1_parentmaterial_numerogis",by.y="NUMEROGIS",all.x=T)
boden$Beschreibung <- as.factor(boden$Beschreibung)
boden <-droplevels(boden)
bbundhoehe <-  read.table(text=getURL("https://raw.githubusercontent.com/fernstgruber/p2/master/data2017/chemiereferenzpunkte_bbundhoehenstufe_2017.txt"),sep=",",header=T)
bbundhoehe <- bbundhoehe[c("ID","bodenbedeckung","hoehenstufen")]
boden<- merge(boden,bbundhoehe,by="ID",all.x=T )
summary(boden)
tabelle_bodentypen_red_vs_geomorph <- as.data.frame.matrix(table(boden$geomorphologie_beschreibung,boden$TYP)) #
View(tabelle_bodentypen_red_vs_geomorph)
names(boden)
boden <- merge(boden,forstdb_AGM,by.x="ID",by.y="AufID",all.x=T)
boden <- merge(boden,wlm_AGM,by.x="ID",by.y="IDENT",all.x=T)
boden <- merge(boden,rebo_AGM,by="ID",all.x=T)
boden <- merge(boden,thalheimer_AGM,by.x="ID",by.y="Nr",all.x=T)
kartiert_wlm <- !(is.na(boden$geomorphologie_kart_wlm))
boden[kartiert_wlm,"geomorphologie_kartiert"] <- as.character(boden$geomorphologie_kart_wlm[kartiert_wlm])
kartiert_forst <- !(is.na(boden$geomorphologie_kart_forstdb))
boden[kartiert_forst,"geomorphologie_kartiert"] <- as.character(boden$geomorphologie_kart_forst[kartiert_forst])
kartiert_rebo <- !(is.na(boden$geomorphologie_kart_rebo))
boden[kartiert_rebo,"geomorphologie_kartiert"] <- as.character(boden$geomorphologie_kart_rebo[kartiert_rebo])
kartiert_thal <- !(is.na(boden$geomorphologie_kart_thalheimer))
boden[kartiert_thal,"geomorphologie_kartiert"] <- as.character(boden$geomorphologie_kart_thalheimer[kartiert_thal])
boden$geomorphologie_kartiert <- as.factor(boden$geomorphologie_kartiert)
levels(boden$geomorphologie_kartiert)
levels(boden$geomorphologie_beschreibung)
levels(boden$geomorphologie_kartiert) %in% levels(boden$geomorphologie_beschreibung)
summary(boden$geomorphologie_kartiert)
geomorphologieundboden <- boden[c("ID","geomorphologie_kartiert","geomorphologie_beschreibung")]
geomorphologieundboden <- merge(geomorphologieundboden,geolegendeng,by.x="geomorphologie_kartiert",by.y="geomorphologie_deutsch",all.x=T)
names(geomorphologieundboden) <- c("geomorphologie_kartiert","ID","geomorphologie_beschreibung","geounit_kart","geomorphologieklasse_kurz_kartiert","short.description_kart","code_kart")
geomorphologieundboden <- merge(geomorphologieundboden,geolegendeng,by.x="geomorphologie_beschreibung",by.y="geomorphologie_deutsch",all.x=T)
names(geomorphologieundboden) <- c("geomorphologie_beschreibung","geomorphologie_kartiert","ID","geounit_kart","geomorphologieklasse_kurz_kartiert","short.description_kart","code_kart","geounit_gk","geomorphologieklasse_kurz_gk","short.description_gk","code_gk")
summary(geomorphologieundboden$geomorphologieklasse_kurz_kartiert)
kartierergegenkarte<-  as.data.frame.matrix(table(geomorphologieundboden$geomorphologieklasse_kurz_gk,geomorphologieundboden$geomorphologieklasse_kurz_kartiert))
kartierergegenkarte <-kartierergegenkarte[-c(2,17),-c(2,17)]
xtable(kartierergegenkarte,caption = "Tabular comparison of parent material geounits as observed by soil surveyor (rows) and in the geologic map (columns).",label = "kartiergegenkarte",)
View(geolegendeng)
summary(boden$geomorphologie_beschreibung)
geomorphologieundboden <- boden[c("ID","geomorphologie_kartiert","geomorphologie_beschreibung")]
geomorphologieundboden <- merge(geomorphologieundboden,geolegendeng,by.x="geomorphologie_kartiert",by.y="geomorphologie_deutsch",all.x=T)
names(geomorphologieundboden) <- c("geomorphologie_kartiert","ID","geomorphologie_beschreibung","geounit_kart","geomorphologieklasse_kurz_kartiert","short.description_kart","code_kart")
geomorphologieundboden <- merge(geomorphologieundboden,geolegendeng,by.x="geomorphologie_beschreibung",by.y="geomorphologie_deutsch",all.x=T)
names(geomorphologieundboden) <- c("geomorphologie_beschreibung","geomorphologie_kartiert","ID","geounit_kart","geomorphologieklasse_kurz_kartiert","short.description_kart","code_kart","geounit_gk","geomorphologieklasse_kurz_gk","short.description_gk","code_gk")
summary(geomorphologieundboden$geomorphologieklasse_kurz_kartiert)
summary(geomorphologieundboden$geomorphologie_beschreibung)
summary(geomorphologieundboden$geomorphologieklasse_kurz_gk)
levels(boden$geomorphologie_kartiert)
levels(boden$geomorphologie_beschreibung)
names(boden)
levels(boden$geomorphologie_kartiert)
levels(boden$geomorphologie_beschreibung)
boden_rein <- boden
boden_rein <- merge(boden_rein,geolegendeng,by.x="geomorphologie_kartiert",by.y="geomorphologie_deutsch",all.x=T)
names(boden_rein)
summary(boden_rein$geounit)
names(geolegendeng)
boden_rein <- boden_rein[,c(1:24)]
boden_rein <- boden
boden_rein <- merge(boden_rein,geolegendeng,by.x="geomorphologie_kartiert",by.y="geomorphologie_deutsch",all.x=T)
boden_rein <- boden_rein[,c(1:24,26)]
names(boden_rein)
names(boden_rein)[25] <- "SGU_kartiert"
names(boden_rein)
boden_rein <- boden
boden_rein <- merge(boden_rein,geolegendeng,by.x="geomorphologie_kartiert",by.y="geomorphologie_deutsch",all.x=T)
boden_rein <- boden_rein[,c(1:24,26)]
names(boden_rein)[25] <- "SGU_kartiert"
summary(boden_rein$SGU_kartiert)
boden_rein <- merge(boden_rein,geolegendeng,by.x="geomorphologie_beschreibung",by.y="geomorphologie_deutsch",all.x=T)
names(boden)
names(boden_rein)
boden_rein <- boden_rein[,c(1:25,27)]
names(boden_rein)
names(boden_rein)[26] <- "SGU_gk"
xtable(kartierergegenkarte,caption = "Tabular comparison of parent material geounits as observed by soil surveyor (rows) and in the geologic map (columns).",label = "kartiergegenkarte",)
tabelle_bodentypen_red_vs_geomorph <- as.data.frame.matrix(table(boden$geomorphologie_beschreibung,boden$TYP)) #
tabelle_bodentypen_red_vs_geomorph
as.data.frame.matrix(table(boden_rein$Abbrev,boden$TYP))
as.data.frame.matrix(table(boden_rein$Abbrev,boden_rein$TYP))
as.data.frame.matrix(table(boden_rein$SGU_gk,boden_rein$TYP))
sum(as.data.frame.matrix(table(boden_rein$SGU_gk,boden_rein$TYP)))
sum(tabelle_bodentypen_red_vs_geomorph)
table_soils_SGU_gk <-as.data.frame.matrix(table(boden_rein$SGU_gk,boden_rein$TYP))
boden_SGU <- boden_rein
save(boden_SGU,file="/home/fabs/PROJECTP2/data2017/boden_SGU.RData")
load("/home/fabs/PROJECTP2/data2017/boden_SGU.RData")
table_soils_SGU_gk <-as.data.frame.matrix(table(boden_SGU$SGU_gk,boden_rein$TYP))
table_soils_SGU_gk <-as.data.frame.matrix(table(boden_SGU$SGU_gk,boden_SGU$TYP))
print(table_soils_SGU_gk)
kable(table_soils_SGU_gk)
library(knitr)
kable(table_soils_SGU_gk)
boden_SGU <- boden_SGU[!is.na(boden_SGU$TYP),]
summary(boden_SGU$TYP)
boden_SGU <- boden_SGU[boden_SGU != "",]
load("/home/fabs/PROJECTP2/data2017/boden_SGU.RData")
boden_SGU <- boden_SGU[boden_SGU$TYP != "",]
table_soils_SGU_gk <-as.data.frame.matrix(table(boden_SGU$SGU_gk,boden_SGU$TYP))
kable(table_soils_SGU_gk)
boden_SGU <- boden_SGU[boden_SGU$SUBTYP != "",]
names(boden_SGU)
load("/home/fabs/PROJECTP2/data2017/boden_SGU.RData")
boden_SGU <- boden_SGU[boden_SGU$KLASSE != "",]
boden_SGU <- boden_SGU[boden_SGU$TYP != "",]
boden_SGU <- boden_SGU[boden_SGU$SUBTYP != "",]
boden_SGU <- droplevels(boden_SGU)
table_soils_SGU_gk <-as.data.frame.matrix(table(boden_SGU$SGU_gk,boden_SGU$TYP))
kable(table_soils_SGU_gk)
kable(as.data.frame.matrix(table(boden_SGU$SGU_gk,boden_SGU$TYP)),caption="Distribtion of the soil typ classes on the SGUs of the geological map")
